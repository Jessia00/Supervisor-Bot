const { Client, Collection } = require("discord.js");
const client = (global.client = new Client({ fetchAllMembers: true }));
require('discord-buttons')(client)
const settings = require("./src/configs/settings.json");
const ayar = require("./src/configs/config.json");
client.commands = new Collection();
client.aliases = new Collection();
client.cooldown = new Map();
require("./src/handlers/commandHandler");
require("./src/handlers/eventHandler");
require("./src/handlers/mongoHandler");
require("./src/handlers/functionHandler")(client);

client
  .login(settings.token)
  .then(() => console.log("[BOT] Bot connected!"))
  .catch(() => console.log("[BOT] Bot can't connected!"));


  client.on("ready", () => {
    client.channels.cache.get("BOTUN Gƒ∞RECEƒûƒ∞ SESLƒ∞ KANAL").join();
   });

   
client.on ( "ready" , () => {
  console.log ( "Ba≈üarƒ±yla", client.user.username + "ƒ∞smi ƒ∞le Giri≈ü Yapƒ±ldƒ±!" );
  console.log("Developed by Aspect");
} );
client.on("ready", async () => {
client.user.setPresence({ activity: { name: settings.botdurum }, status: "dnd" });
});


//-----------------------TAG-ROL----------------------\\

client.on("userUpdate", async (stg, yeni,message) => {
  var member = message.mentions.members.first();
  var sunucu = client.guilds.cache.get("SUNUCU ƒ∞D Gƒ∞R");
  var uye = sunucu.members.cache.get(yeni.id);
  var ekipTag = ayar.registration.tag;
  var ekipRol√º = ayar.registration.tagRoles;
  var logKanali = member.guild.channels.cache.get(ayar.registration.taglog);

  if (!sunucu.members.cache.has(yeni.id) || yeni.bot || stg.username === yeni.username)
    return;

  if (yeni.username.includes(ekipTag) && !uye.roles.cache.has(ekipRol√º)) {
    try {
      await uye.roles.add(ekipRol√º);
      await uye.send(`**Tagƒ±mƒ±zƒ± aldƒ±ƒüƒ±n i√ßin te≈üekk√ºrler! Aramƒ±za ho≈ü geldin.**`);
      await client.channels.cache.get(logKanali).send(`**${yeni} (\`${yeni.id}\`) adlƒ± √ºye tagƒ±mƒ±zƒ± alarak aramƒ±za katƒ±ldƒ±!**`);
    } catch (err) {
      console.error(err);
    }
  }

  if (!yeni.username.includes(ekipTag) && uye.roles.cache.has(ekipRol√º)) {
    try {
      await uye.roles.remove(
        uye.roles.cache.filter(
          rol => rol.position >= sunucu.roles.cache.get(ekipRol√º).position
        )
      );
      await uye.send(`**Tagƒ±mƒ±zƒ± bƒ±raktƒ±ƒüƒ±n i√ßin taglƒ± rol√ºn rol√ºn alƒ±ndƒ±! Tagƒ±mƒ±zƒ± tekrar alƒ±p aramƒ±za katƒ±lmak istersen;\nTagƒ±mƒ±z: **${ekipTag}**`);
      await client.channels.cache.get(logKanali).send(`**${yeni} (\`${yeni.id}\`) adlƒ± √ºye tagƒ±mƒ±zƒ± bƒ±rakarak aramƒ±zdan ayrƒ±ldƒ±!**`);
    } catch (err) {
      console.error(err);
    }
  }

});


 client.on("message", (message) => {

    if (message.content !== "!rolalma" || message.author.bot) return;

    client.api.channels(message.channel.id).messages.post({ data: {"content": `Merhaba **Valence** √ºyeleri,\n√áekili≈ü katƒ±lƒ±mcƒ±sƒ± alarak __**Nitro**__ , __**Spotify**__ , __**Netflix**__ , __**Exxen**__ , __**BluTv**__ gibi √ße≈üitli √∂d√ºllerin sahibi olabilirsiniz.\nEtkinlik katƒ±lƒ±mcƒ±sƒ± alarak √ße≈üitli etkinliklerin yapƒ±ldƒ±ƒüƒ± anlarda herkesten √∂nce haberdar olabilirsiniz ve √ßekili≈ülere √∂nceden katƒ±lma hakkƒ± kazanabilirsiniz.\n\n__A≈üaƒüƒ±da ki butonlara basarak siz de bu √∂d√ºlleri kazanmaya hemen ba≈ülayabilirsiniz!__`,
    "components":[{
        "type":1,"components":[
                                 {"type":2,"style":4,"custom_id":"cekilis","label":"üéÅ √áekili≈ü Katƒ±lƒ±mcƒ±sƒ±"},
                                 {"type":2,"style":3,"custom_id":"etkinlik","label":"üéâ Etkinlik Katƒ±lƒ±mcƒ±sƒ±"},
               ]}    
]}
         })
        });

client.on('clickButton', async (button) => {
    if (button.id === 'cekilis') {
        if (button.clicker.member.roles.cache.get(ayar.Roles.cekilis)) {
            await button.clicker.member.roles.remove(ayar.Roles.cekilis)
            await button.reply.think(true);
            await button.reply.edit(`Rolleriniz g√ºncellendi.`)
        } else {
            await button.clicker.member.roles.add(ayar.Roles.cekilis)
            await button.reply.think(true);
            await button.reply.edit(`Rolleriniz g√ºncellendi.`)
        }
    }

    if (button.id === 'etkinlik') {
        if (button.clicker.member.roles.cache.get(ayar.Roles.etkinlik)) {
            await button.clicker.member.roles.remove(ayar.Roles.etkinlik)
            await button.reply.think(true);
            await button.reply.edit(`Rolleriniz g√ºncellendi.`)
        } else {
            await button.clicker.member.roles.add(ayar.Roles.etkinlik)
            await button.reply.think(true);
            await button.reply.edit(`Rolleriniz g√ºncellendi.`)
        }
    }
});
